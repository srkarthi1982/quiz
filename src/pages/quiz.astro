---
import LayoutFull from "../app/Layout.astro";
// import { actions } from "astro:actions";

// const numQuestions = 1;
// const platform = "Programming";
// const subject = "Web Development";
// const topic = "Alpine JS";
// const roadmap = "Conditional & Looping Directives";
// const level = "E";
// let questions = [];
// const { data, error } = await Astro.callAction(actions.generateQuestion, {
// 	numQuestions,
// 	platform,
// 	subject,
// 	topic,
// 	roadmap,
// 	level
// });
// if(error) console.log('error', error)
// const reader = data?.body?.getReader();
// const decoder = new TextDecoder();
// let result = "";
// if(reader){
// 	while (true) {
// 	const { done, value } = await reader.read();
// 	if (done) break;
// 	result += decoder.decode(value, { stream: true });
// 	try {
// 		questions = JSON.parse(result);
// 	} catch (e) {}
// }
// }
---

<LayoutFull active="quiz">
	<div>
		<h1 class="text-2xl font-bold text-center mb-5">Quiz Time</h1>
		<!-- <div class="space-y-6">
			{
				questions.qz.map((item: any, index: number) => (
					<div class="p-5 border rounded-lg shadow-sm bg-gray-50">
						<h2 class="text-lg font-semibold text-gray-900">
							{index + 1}. {item.q}
						</h2>

						<ul class="mt-3 space-y-2">
							{item.o.map((option: any, idx: number) => (
								<li class="flex gap-2 items-start">
									<span class="font-semibold">
										{String.fromCharCode(97 + idx)}.
									</span>
									<span>{option}</span>
								</li>
							))}
						</ul>

						<p class="mt-4 text-green-600 font-semibold">
							âœ… Correct Answer: {item.o[item.a]}
						</p>

						<p class="mt-2 text-gray-700 italic">
							ðŸ’¡ Explanation: {item.e}
						</p>
					</div>
				))
			}
		</div> -->
	</div>
</LayoutFull>
